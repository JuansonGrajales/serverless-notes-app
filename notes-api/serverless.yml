service: notes-app-api

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource: 
        - "arn:aws:dynamodb:us-east-1:*:table/NotesTable"
        - "arn:aws:dynamodb:us-east-1:*:table/NotesTable/index/UserIdIndex"

functions:
  graphql:
    handler: src/index.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
            allowCredentials: true
      - http:
          path: graphql
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
            allowCredentials: true

resources:
  Resources:
  # DynamoDB table to store item: {id: <ID>, content: <CONTENT>}
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: NotesTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
    # S3 Bucket to host static website
    WebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        # AWS CloudFormation generates a random 12-character string and uses it as the bucket name
        # BucketName: notes-app-api-website-bucket
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        WebsiteConfiguration:
          IndexDocument: index.html
    # Bucket policy to make sure all files inside the Bucket are available to CloudFront
    WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebsiteBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action: 
              - s3:GetObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: WebsiteBucket
                    - "/*"
    # CloudFront distribution to server the website
    WebsiteDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          Origins:
            - DomainName:
                Fn::GetAtt:
                  - WebsiteBucket
                  - RegionalDomainName
              Id: WebsiteBucketOrigin
              CustomOriginConfig:
                OriginProtocolPolicy: http-only
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            TargetOriginId: WebsiteBucketOrigin
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

  Outputs:
    WebsiteURL:
      Value:
        Fn::GetAtt:
          - WebsiteDistribution
          - DomainName
      Description: URL for website hosted on S3
    S3BucketName:
      Value:
        Ref: WebsiteBucket
      Description: S3 bucket name
  